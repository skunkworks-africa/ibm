name: Create Directory Structure with Initial Content

on:
  push:
    branches:
    - main
    - release/*

jobs:
  create-structure:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Create directories and files
        run: |
          set -x  # Enable debugging
          echo "Creating directories..."
          mkdir -p ibm/docs ibm/scripts ibm/examples/ai ibm/examples/cloud ibm/examples/containers
          echo "Creating files if they do not exist..."
          if [ ! -f ibm/docs/getting-started.md ]; then
              echo "# Getting Started with IBM LinuxONE" > ibm/docs/getting-started.md || { echo "Failed to create getting-started.md"; exit 1; }
          fi
          if [ ! -f ibm/docs/architecture.md ]; then
              echo "# Architecture Overview" > ibm/docs/architecture.md || { echo "Failed to create architecture.md"; exit 1; }
          fi
          if [ ! -f ibm/docs/security.md ]; then
              echo "# Security Guidelines" > ibm/docs/security.md || { echo "Failed to create security.md"; exit 1; }
          fi
          if [ ! -f ibm/scripts/deploy.sh ]; then
              echo -e "#!/bin/bash\n# Deployment script" > ibm/scripts/deploy.sh || { echo "Failed to create deploy.sh"; exit 1; }
          fi
          if [ ! -f ibm/scripts/backup.sh ]; then
              echo -e "#!/bin/bash\n# Backup script" > ibm/scripts/backup.sh || { echo "Failed to create backup.sh"; exit 1; }
          fi
          if [ ! -f ibm/scripts/monitor.sh ]; then
              echo -e "#!/bin/bash\n# Monitoring script" > ibm/scripts/monitor.sh || { echo "Failed to create monitor.sh"; exit 1; }
          fi
          if [ ! -f ibm/examples/ai/ai_example_1.py ]; then
              echo -e "# AI Example 1\nprint('Hello, AI 1')" > ibm/examples/ai/ai_example_1.py || { echo "Failed to create ai_example_1.py"; exit 1; }
          fi
          if [ ! -f ibm/examples/ai/ai_example_2.py ]; then
              echo -e "# AI Example 2\nprint('Hello, AI 2')" > ibm/examples/ai/ai_example_2.py || { echo "Failed to create ai_example_2.py"; exit 1; }
          fi
          if [ ! -f ibm/examples/cloud/cloud_example_1.yaml ]; then
              echo -e "# Cloud Example 1\napiVersion: v1\nkind: ConfigMap" > ibm/examples/cloud/cloud_example_1.yaml || { echo "Failed to create cloud_example_1.yaml"; exit 1; }
          fi
          if [ ! -f ibm/examples/cloud/cloud_example_2.yaml ]; then
              echo -e "# Cloud Example 2\napiVersion: v1\nkind: Pod" > ibm/examples/cloud/cloud_example_2.yaml || { echo "Failed to create cloud_example_2.yaml"; exit 1; }
          fi
          if [ ! -f ibm/examples/containers/container_example_1.dockerfile ]; then
              echo -e "# Container Example 1\nFROM ubuntu:latest\nRUN apt-get update" > ibm/examples/containers/container_example_1.dockerfile || { echo "Failed to create container_example_1.dockerfile"; exit 1; }
          fi
          if [ ! -f ibm/examples/containers/container_example_2.dockerfile ]; then
              echo -e "# Container Example 2\nFROM alpine:latest\nRUN apk add --no-cache bash" > ibm/examples/containers/container_example_2.dockerfile || { echo "Failed to create container_example_2.dockerfile"; exit 1; }
          fi
          if [ ! -f LICENSE ]; then
              echo -e "MIT License\n\nCopyright (c) 2024 Skunkworks" > LICENSE || { echo "Failed to create LICENSE"; exit 1; }
          fi

      - name: Download Course Catalog JSON
        run: |
          curl -o courses.json https://www.ibm.com/training/files/GTPjson/CourseFeed_Global.json

      - name: Display JSON content for debugging
        run: |
          cat courses.json

      - name: Process Course Catalog and Update README.md
        run: |
          set -x  # Enable debugging
          echo "Parsing JSON and updating README.md"
          courses=$(jq -r '.courses[] | "\(.title) - \(.url)"' courses.json)
          {
            echo "# IBM LinuxONE Repository"
            echo ""
            echo "![GitHub release (latest by date)](https://img.shields.io/github/v/release/skunkworksza/ibm)"
            echo "![GitHub last commit](https://img.shields.io/github/last-commit/skunkworksza/ibm)"
            echo "![GitHub issues](https://img.shields.io/github/issues/skunkworksza/ibm)"
            echo "![GitHub pull requests](https://img.shields.io/github/issues-pr/skunkworksza/ibm)"
            echo ""
            echo "Welcome to the IBM LinuxONE Repository by Skunkworks. This repository contains various resources, scripts, and guides to help you get the most out of your IBM LinuxONE infrastructure."
            echo ""
            echo "## 📂 Directory Structure"
            echo ""
            echo "\`\`\`plaintext"
            echo "ibm/"
            echo "├── docs/"
            echo "│   ├── getting-started.md"
            echo "│   ├── architecture.md"
            echo "│   └── security.md"
            echo "├── scripts/"
            echo "│   ├── deploy.sh"
            echo "│   ├── backup.sh"
            echo "│   └── monitor.sh"
            echo "├── examples/"
            echo "│   ├── ai/"
            echo "│   │   ├── ai_example_1.py"
            echo "│   │   └── ai_example_2.py"
            echo "│   ├── cloud/"
            echo "│   │   ├── cloud_example_1.yaml"
            echo "│   │   └── cloud_example_2.yaml"
            echo "│   └── containers/"
            echo "│       ├── container_example_1.dockerfile"
            echo "│       └── container_example_2.dockerfile"
            echo "├── LICENSE"
            echo "└── README.md"
            echo "\`\`\`"
            echo ""
            echo "✨ Key Features"
            echo "Comprehensive Documentation: Step-by-step guides to get you started with IBM LinuxONE."
            echo "Automation Scripts: Useful scripts for deploying, backing up, and monitoring your LinuxONE environment."
            echo "Examples: Real-world examples of AI, cloud, and container applications."
            echo ""
            echo "## 📖 Learning Resources"
            echo "IBM LinuxONE Overview"
            echo "Getting Started with IBM LinuxONE"
            echo "IBM Developer: LinuxONE Tutorials"
            echo "IBM Redbooks: LinuxONE"
            echo ""
            echo "## 📚 Course Catalog"
            for course in $courses; do
              echo "- $course"
            done
            echo ""
            echo "## 🎓 Educational Content"
            echo "| Resource | Description |"
            echo "| --- | --- |"
            echo "| LinuxONE Academy | In-depth courses on LinuxONE. |"
            echo "| IBM Training | Broad range of IBM training courses. |"
            echo "| IBM Cloud Docs | Documentation for IBM Cloud services. |"
            echo "| Coursera: IBM Courses | Online courses offered by IBM. |"
            echo ""
            echo "## 📢 Famous Quotes"
            echo "\"The great thing about LinuxONE is the combination of performance, security, and scalability.\""
            echo "– Arvind Krishna, CEO of IBM"
            echo ""
            echo "\"IBM LinuxONE provides a superior experience for businesses that demand high availability and secure transactions.\""
            echo "– Ginni Rometty, Former CEO of IBM"
            echo ""
            echo "## 🛠️ How to Contribute"
            echo "1. Fork the repository."
            echo "2. Create a new branch (git checkout -b feature-branch)."
            echo "3. Commit your changes (git commit -m 'Add new feature')."
            echo "4. Push to the branch (git push origin feature-branch)."
            echo "5. Create a new Pull Request."
            echo ""
            echo "## 📞 Contact"
            echo "For any queries or support, please contact us at info@skunkworks.africa."
            echo ""
            echo "## 📄 License"
            echo "This project is licensed under the MIT License - see the LICENSE file for details."
            echo ""
            echo "![IBM Logo](https://example.com/ibm_logo.png)"
            echo ""
            echo "Stay tuned for more updates and contributions! 🌐🚀"
          } > README.md

      - name: Commit and push changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add ibm/ LICENSE README.md
          git diff-index --quiet HEAD || git commit -m 'Create directory structure and initial files with content'
          git push || echo "No changes to push"

      - name: Install GitHub CLI
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install GitHub CLI
        run: |
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt-get update
          sudo apt-get install gh

      - name: Ensure Labels Exist
        run: |
          gh label create "documentation" --description "Documentation related changes" --color "#1d76db" || echo "Label 'documentation' already exists"
          gh label create "enhancement" --description "New feature or request" --color "#a2eeef" || echo "Label 'enhancement' already exists"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create a new issue with GitHub CLI
        run: |
          gh issue create --title "New Directory Structure Created" --body "A new directory structure and initial files have been created in the IBM LinuxONE repository. Please review and contribute!" --label "documentation,enhancement"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Send notification to Slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
          slack-message: "New directory structure and initial content have been created in the IBM LinuxONE repository. Please check it out and start contributing! :tada:"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
